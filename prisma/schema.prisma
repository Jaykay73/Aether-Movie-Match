// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  watchlist     Watchlist?
  likedMovies   LikedMovie[]
  preferences   Preference[]
}

model Watchlist {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movies    WatchlistMovie[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WatchlistMovie {
  id         String   @id @default(cuid())
  watchlistId String
  watchlist  Watchlist @relation(fields: [watchlistId], references: [id], onDelete: Cascade)
  movieId    String
  tmdbId     String
  addedAt    DateTime @default(now())

  @@unique([watchlistId, movieId])
}

model LikedMovie {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movieId   String
  tmdbId    String
  isLiked   Boolean  // true for liked, false for disliked
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, movieId])
}

model Preference {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movieId   String
  tmdbId    String
  createdAt DateTime @default(now())

  @@unique([userId, movieId])
}
